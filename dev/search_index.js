var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Whitebox","category":"page"},{"location":"#Whitebox.jl","page":"Home","title":"Whitebox.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Dev) (Image: Build Status) (Image: Coverage)","category":"page"},{"location":"#WhiteboxTools-Julia-frontend","page":"Home","title":"WhiteboxTools Julia frontend","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"WhiteboxTools is an open-source command-line program for geospatial analysis created by Dr. John Lindsay.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package is a work-in-progress and is not affiliated with WhiteboxTools.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modeled after the Python frontend.","category":"page"},{"location":"#Example","page":"Home","title":"Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"All functions can be performed using therun_tools function.","category":"page"},{"location":"","page":"Home","title":"Home","text":"wbt = WhiteboxTools()\ntool_name = \"centroid_vector\"\nargs = [\"-i=Data/polygons.shp\", \"--overlay=Data/buff_centroid.shp\", \"-o=Data/int_test.shp\"]\n\nz = run_tool(wbt, \"intersect\"; args=args)","category":"page"},{"location":"","page":"Home","title":"Home","text":"****************************\n* Welcome to Intersect     *\n* Powered by WhiteboxTools *\n* www.whiteboxgeo.com      *\n****************************\nReading data...\nProgress: 62%\nProgress: 75%\nProgress: 87%\nProgress: 100%\nSaving data...\nOutput file written\nElapsed Time: 0.10s\nSuccess!\n0","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Whitebox]","category":"page"},{"location":"#Whitebox.default_callback-Tuple{Any}","page":"Home","title":"Whitebox.default_callback","text":"default_callback(value)\n\nA simple default callback that outputs using the print function. When tools are called without providing a custom callback, this function will be used to print to standard output.\n\n\n\n\n\n","category":"method"},{"location":"#Whitebox.help-Tuple{Whitebox.WhiteboxTools}","page":"Home","title":"Whitebox.help","text":"help(wbt::WhiteboxTools)\n\nRetrieves the help description for WhiteboxTools.\n\n\n\n\n\n","category":"method"},{"location":"#Whitebox.license","page":"Home","title":"Whitebox.license","text":"license(wbt::WhiteboxTools, tool_name::Union{Nothing, String} = nothing)\n\nRetrieves the license information for WhiteboxTools.\n\n\n\n\n\n","category":"function"},{"location":"#Whitebox.list_tools-Tuple{Whitebox.WhiteboxTools, Vector{String}}","page":"Home","title":"Whitebox.list_tools","text":"list_tools(wbt::WhiteboxTools, tool_name::String)\n\nLists all available tools in WhiteboxTools.\n\n\n\n\n\n","category":"method"},{"location":"#Whitebox.run_tool-Tuple{Whitebox.WhiteboxTools, String}","page":"Home","title":"Whitebox.run_tool","text":"run_tool(wbt::WhiteboxTools, tool_name::String; callback=nothing, args::Union{Nothing, Vector{String}}=nothing)\n\nRuns a tool and specifies tool arguments. Returns 0 if completes without error. Returns 1 on error with details.\n\nReturns 2 if process is cancelled by user.\n\n\n\n\n\n","category":"method"},{"location":"#Whitebox.set_compress_rasters-Tuple{Whitebox.WhiteboxTools, Bool}","page":"Home","title":"Whitebox.set_compress_rasters","text":"set_compress_rasters(wbt::WhiteboxTools, compress_rasters::Bool)\n\nSets the flag used by WhiteboxTools to determine whether to use compression for output rasters.\n\n\n\n\n\n","category":"method"},{"location":"#Whitebox.set_verbose_mode","page":"Home","title":"Whitebox.set_verbose_mode","text":"set_verbose_mode(wbt::WhiteboxTools, val::Bool=true)\n\nSets verbose mode. If verbose mode is False, tools will not print output messages. Tools will frequently provide substantial feedback while they are operating, e.g. updating progress for  various sub-routines. When the user has scripted a workflow that ties many tools in sequence, this level of tool output can be problematic. By setting verbose mode to False, these\n\n\n\n\n\n","category":"function"},{"location":"#Whitebox.set_whitebox_dir-Tuple{Whitebox.WhiteboxTools, String}","page":"Home","title":"Whitebox.set_whitebox_dir","text":"set_whitebox_dir(path_str::String)\n\nSets the directory to the WhiteboxTools executable file.\n\n\n\n\n\n","category":"method"},{"location":"#Whitebox.set_working_dir-Tuple{Whitebox.WhiteboxTools, String}","page":"Home","title":"Whitebox.set_working_dir","text":"set_working_dir(wbt::WhiteboxTools, path_str::String)\n\nSets the working directory, i.e. the directory in which the data files are located. By setting the working  directory, tool input parameters that are files need only specify the file name rather than the complete file path.\n\n\n\n\n\n","category":"method"},{"location":"#Whitebox.to_camelcase-Tuple{String}","page":"Home","title":"Whitebox.to_camelcase","text":"to_camelcase(name::String)\n\nConvert snake_case name to CamelCase name \n\n\n\n\n\n","category":"method"},{"location":"#Whitebox.to_snakecase-Tuple{String}","page":"Home","title":"Whitebox.to_snakecase","text":"to_snakecase(name::String)\n\nConvert CamelCase name to snake_case name \n\n\n\n\n\n","category":"method"},{"location":"#Whitebox.tool_help-Tuple{Whitebox.WhiteboxTools, String}","page":"Home","title":"Whitebox.tool_help","text":"tool_help(wbt::WhiteboxTools, tool_name::String)\n\nRetrieves the help description for a specific tool.\n\n\n\n\n\n","category":"method"},{"location":"#Whitebox.tool_parameters-Tuple{Whitebox.WhiteboxTools, String}","page":"Home","title":"Whitebox.tool_parameters","text":"tool_parameters(wbt::WhiteboxTools, tool_name::String)\n\nRetrieves the tool parameter descriptions for a specific tool.\n\n\n\n\n\n","category":"method"},{"location":"#Whitebox.toolbox","page":"Home","title":"Whitebox.toolbox","text":"toolbox(wbt::WhiteboxTools, tool_name::String)\n\nRetrieves the tool parameter descriptions for a specific tool.\n\n\n\n\n\n","category":"function"},{"location":"#Whitebox.unzip-Tuple{String}","page":"Home","title":"Whitebox.unzip","text":"unzip(file::String; exdir::String=\"\")\n\nUnzip a .zip folder and put contents in exdir. \n\nModified from https://discourse.julialang.org/t/how-to-extract-a-file-in-a-zip-archive-without-using-os-specific-tools/34585\n\n\n\n\n\n","category":"method"},{"location":"#Whitebox.version-Tuple{Whitebox.WhiteboxTools}","page":"Home","title":"Whitebox.version","text":"version(wbt::WhiteboxTools)\n\nRetrieves the version information for WhiteboxTools.\n\n\n\n\n\n","category":"method"},{"location":"#Whitebox.view_code-Tuple{Whitebox.WhiteboxTools, String}","page":"Home","title":"Whitebox.view_code","text":"view_code(wbt::WhiteboxTools, tool_name::String)\n\nOpens a web browser to view the source code for a specific tool on the projects source code repository.\n\n\n\n\n\n","category":"method"}]
}
